################################################################################
#
# RevBayes Script: Bayesian inference of branch lengths using a Jukes-Cantor
#          substitution model on a single alignment, with a fixed tree topology.
#
################################################################################

num_generations = 5000
### Read in sequence data for both genes
data = readDiscreteCharacterData(aln_file)
print ("\n\tRead alignment")

# Get some useful variables from the data. We need these later on.
taxa <- data.taxa()

moves    = VectorMoves()
monitors = VectorMonitors()


######################
# Substitution Model #
######################

# create a constant variable for the rate matrix
Q <- fnJC(4)


##############
# Tree model #
##############
# Prior distribution on the tree topology : No need, it's constant.

tree <- readBranchLengthTrees(tree_file)[1]
num_branches <- tree.nnodes() - 1


# Branch length prior
for (i in 1:num_branches) {
    bl[i] ~ dnExponential(10.0)
    moves.append( mvScale(bl[i], lambda=0.1, tune=FALSE) )
    moves.append( mvScale(bl[i], lambda=1.0, tune=FALSE) )
    moves.append( mvScale(bl[i], lambda=10, tune=FALSE) )
}
TL := sum(bl)

psi := treeAssembly(tree, bl)


###################
# PhyloCTMC Model #
###################

# the sequence evolution model
seq ~ dnPhyloCTMC(tree=psi, Q=Q, type="DNA")

# attach the data
seq.clamp(data)


############
# Analysis #
############

mymodel = model(psi)

# add monitors
monitors.append( mnScreen(TL, printgen=100) )
monitors.append( mnFile(psi, filename=aln_file+".trees", printgen=10) )
monitors.append( mnModel(filename=aln_file+".log", printgen=10) )

print(data.names())
print(psi.names())


# run the analysis
mymcmc = mcmc(mymodel, moves, monitors)

mymcmc.run(generations = num_generations)


###################
# Post processing #
###################

# Now, we will analyze the tree output.
# Let us start by reading in the tree trace
treetrace = readTreeTrace(aln_file+".trees", treetype="non-clock")
# and then get the MAP tree :
map_tree = mapTree(treetrace, aln_file+".tree")


# you may want to quit RevBayes now
#q()
